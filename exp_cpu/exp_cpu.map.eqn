-- Copyright (C) 1991-2005 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--D1_IR[0] is instru_fetch:G_INSTRU_FETCH|IR[0]
D1_IR[0] = DFFEAS(E1_data_read[0], D1_state.s2, reset,  ,  ,  ,  ,  ,  );


--D1_pc[0] is instru_fetch:G_INSTRU_FETCH|pc[0]
D1_pc[0] = DFFEAS(D1L55, !D1_state.s3, reset,  ,  ,  ,  ,  ,  );


--A1L12 is Mux~1875
A1L12 = D1_pc[0] & reg_sel[2] & reg_sel[1];


--A1L13 is Mux~1876
A1L13 = reg_sel[3] & (reg_sel[2] & reg_sel[1] # !reg_sel[0]);


--D1_state.s1 is instru_fetch:G_INSTRU_FETCH|state.s1
D1_state.s1 = DFFEAS(D1L74, clk, reset,  ,  ,  ,  ,  ,  );


--A1L14 is Mux~1877
A1L14 = D1_state.s1 & !reg_sel[1] & !reg_sel[0];


--G2_q_output[0] is regfile:G_REGFILE|reg:Areg01|q_output[0]
G2_q_output[0] = DFFEAS(E1L10, !D1_state.s3, reset,  , H1L1,  ,  ,  ,  );


--G3_q_output[0] is regfile:G_REGFILE|reg:Areg02|q_output[0]
G3_q_output[0] = DFFEAS(E1L10, !D1_state.s3, reset,  , H1L2,  ,  ,  ,  );


--G1_q_output[0] is regfile:G_REGFILE|reg:Areg00|q_output[0]
G1_q_output[0] = DFFEAS(E1L10, !D1_state.s3, reset,  , G1L1,  ,  ,  ,  );


--A1L15 is Mux~1878
A1L15 = reg_sel[0] & (reg_sel[1]) # !reg_sel[0] & (reg_sel[1] & G3_q_output[0] # !reg_sel[1] & (G1_q_output[0]));


--G4_q_output[0] is regfile:G_REGFILE|reg:Areg03|q_output[0]
G4_q_output[0] = DFFEAS(E1L10, !D1_state.s3, reset,  , H1L3,  ,  ,  ,  );


--A1L16 is Mux~1879
A1L16 = reg_sel[0] & (A1L15 & (G4_q_output[0]) # !A1L15 & G2_q_output[0]) # !reg_sel[0] & (A1L15);


--A1L17 is Mux~1880
A1L17 = reg_sel[3] & reg_sel[0] # !reg_sel[3] & (reg_sel[2]);


--A1L18 is Mux~1881
A1L18 = reg_sel[3] & (!A1L17) # !reg_sel[3] & (A1L17 & A1L14 # !A1L17 & (A1L16));


--A1L19 is Mux~1882
A1L19 = A1L13 & (A1L18 & (A1L12) # !A1L18 & D1_IR[0]) # !A1L13 & (A1L18);


--A1L20 is Mux~1883
A1L20 = A1L19 & !reg_sel[4] & !reg_sel[5];


--D1_IR[1] is instru_fetch:G_INSTRU_FETCH|IR[1]
D1_IR[1] = DFFEAS(E1_data_read[1], D1_state.s2, reset,  ,  ,  ,  ,  ,  );


--D1_pc[1] is instru_fetch:G_INSTRU_FETCH|pc[1]
D1_pc[1] = DFFEAS(D1L57, !D1_state.s3, reset,  ,  ,  ,  ,  ,  );


--A1L21 is Mux~1884
A1L21 = reg_sel[2] & reg_sel[1] & D1_pc[1];


--D1_state.s2 is instru_fetch:G_INSTRU_FETCH|state.s2
D1_state.s2 = DFFEAS(D1_state.s1, clk, reset,  ,  ,  ,  ,  ,  );


--A1L22 is Mux~1885
A1L22 = D1_state.s2 & !reg_sel[1] & !reg_sel[0];


--G3_q_output[1] is regfile:G_REGFILE|reg:Areg02|q_output[1]
G3_q_output[1] = DFFEAS(E1L11, !D1_state.s3, reset,  , H1L2,  ,  ,  ,  );


--G2_q_output[1] is regfile:G_REGFILE|reg:Areg01|q_output[1]
G2_q_output[1] = DFFEAS(E1L11, !D1_state.s3, reset,  , H1L1,  ,  ,  ,  );


--G1_q_output[1] is regfile:G_REGFILE|reg:Areg00|q_output[1]
G1_q_output[1] = DFFEAS(E1L11, !D1_state.s3, reset,  , G1L1,  ,  ,  ,  );


--A1L23 is Mux~1886
A1L23 = reg_sel[1] & (reg_sel[0]) # !reg_sel[1] & (reg_sel[0] & G2_q_output[1] # !reg_sel[0] & (G1_q_output[1]));


--G4_q_output[1] is regfile:G_REGFILE|reg:Areg03|q_output[1]
G4_q_output[1] = DFFEAS(E1L11, !D1_state.s3, reset,  , H1L3,  ,  ,  ,  );


--A1L24 is Mux~1887
A1L24 = reg_sel[1] & (A1L23 & (G4_q_output[1]) # !A1L23 & G3_q_output[1]) # !reg_sel[1] & (A1L23);


--A1L25 is Mux~1888
A1L25 = reg_sel[3] & (!A1L17) # !reg_sel[3] & (A1L17 & A1L22 # !A1L17 & (A1L24));


--A1L26 is Mux~1889
A1L26 = A1L13 & (A1L25 & (A1L21) # !A1L25 & D1_IR[1]) # !A1L13 & (A1L25);


--A1L27 is Mux~1890
A1L27 = A1L26 & !reg_sel[4] & !reg_sel[5];


--D1_IR[2] is instru_fetch:G_INSTRU_FETCH|IR[2]
D1_IR[2] = DFFEAS(E1_data_read[2], D1_state.s2, reset,  ,  ,  ,  ,  ,  );


--D1_pc[2] is instru_fetch:G_INSTRU_FETCH|pc[2]
D1_pc[2] = DFFEAS(D1L59, !D1_state.s3, reset,  ,  ,  ,  ,  ,  );


--A1L28 is Mux~1891
A1L28 = reg_sel[2] & reg_sel[1] & D1_pc[2];


--D1_state.s3 is instru_fetch:G_INSTRU_FETCH|state.s3
D1_state.s3 = DFFEAS(D1_state.s2, clk, reset,  ,  ,  ,  ,  ,  );


--A1L29 is Mux~1892
A1L29 = D1_state.s3 & !reg_sel[1] & !reg_sel[0];


--G2_q_output[2] is regfile:G_REGFILE|reg:Areg01|q_output[2]
G2_q_output[2] = DFFEAS(E1L12, !D1_state.s3, reset,  , H1L1,  ,  ,  ,  );


--G3_q_output[2] is regfile:G_REGFILE|reg:Areg02|q_output[2]
G3_q_output[2] = DFFEAS(E1L12, !D1_state.s3, reset,  , H1L2,  ,  ,  ,  );


--G1_q_output[2] is regfile:G_REGFILE|reg:Areg00|q_output[2]
G1_q_output[2] = DFFEAS(E1L12, !D1_state.s3, reset,  , G1L1,  ,  ,  ,  );


--A1L30 is Mux~1893
A1L30 = reg_sel[0] & (reg_sel[1]) # !reg_sel[0] & (reg_sel[1] & G3_q_output[2] # !reg_sel[1] & (G1_q_output[2]));


--G4_q_output[2] is regfile:G_REGFILE|reg:Areg03|q_output[2]
G4_q_output[2] = DFFEAS(E1L12, !D1_state.s3, reset,  , H1L3,  ,  ,  ,  );


--A1L31 is Mux~1894
A1L31 = reg_sel[0] & (A1L30 & (G4_q_output[2]) # !A1L30 & G2_q_output[2]) # !reg_sel[0] & (A1L30);


--A1L32 is Mux~1895
A1L32 = reg_sel[3] & (!A1L17) # !reg_sel[3] & (A1L17 & A1L29 # !A1L17 & (A1L31));


--A1L33 is Mux~1896
A1L33 = A1L13 & (A1L32 & (A1L28) # !A1L32 & D1_IR[2]) # !A1L13 & (A1L32);


--A1L34 is Mux~1897
A1L34 = A1L33 & !reg_sel[4] & !reg_sel[5];


--A1L35 is Mux~1898
A1L35 = reg_sel[2] & reg_sel[1] & reg_sel[3];


--D1_IR[3] is instru_fetch:G_INSTRU_FETCH|IR[3]
D1_IR[3] = DFFEAS(E1_data_read[3], D1_state.s2, reset,  ,  ,  ,  ,  ,  );


--D1_pc[3] is instru_fetch:G_INSTRU_FETCH|pc[3]
D1_pc[3] = DFFEAS(D1L61, !D1_state.s3, reset,  ,  ,  ,  ,  ,  );


--A1L36 is Mux~1899
A1L36 = A1L35 & (reg_sel[0] & D1_IR[3] # !reg_sel[0] & (D1_pc[3]));


--G3_q_output[3] is regfile:G_REGFILE|reg:Areg02|q_output[3]
G3_q_output[3] = DFFEAS(E1L13, !D1_state.s3, reset,  , H1L2,  ,  ,  ,  );


--G2_q_output[3] is regfile:G_REGFILE|reg:Areg01|q_output[3]
G2_q_output[3] = DFFEAS(E1L13, !D1_state.s3, reset,  , H1L1,  ,  ,  ,  );


--G1_q_output[3] is regfile:G_REGFILE|reg:Areg00|q_output[3]
G1_q_output[3] = DFFEAS(E1L13, !D1_state.s3, reset,  , G1L1,  ,  ,  ,  );


--A1L37 is Mux~1900
A1L37 = reg_sel[1] & (reg_sel[0]) # !reg_sel[1] & (reg_sel[0] & G2_q_output[3] # !reg_sel[0] & (G1_q_output[3]));


--G4_q_output[3] is regfile:G_REGFILE|reg:Areg03|q_output[3]
G4_q_output[3] = DFFEAS(E1L13, !D1_state.s3, reset,  , H1L3,  ,  ,  ,  );


--A1L38 is Mux~1901
A1L38 = reg_sel[1] & (A1L37 & (G4_q_output[3]) # !A1L37 & G3_q_output[3]) # !reg_sel[1] & (A1L37);


--A1L39 is Mux~1902
A1L39 = !reg_sel[2] & !reg_sel[3];


--A1L40 is Mux~1903
A1L40 = reg_sel[4] # reg_sel[5];


--A1L41 is Mux~1904
A1L41 = !A1L40 & (A1L36 # A1L38 & A1L39);


--D1_pc[4] is instru_fetch:G_INSTRU_FETCH|pc[4]
D1_pc[4] = DFFEAS(D1L63, !D1_state.s3, reset,  ,  ,  ,  ,  ,  );


--D1_IR[4] is instru_fetch:G_INSTRU_FETCH|IR[4]
D1_IR[4] = DFFEAS(D1L37, D1_state.s2, reset,  ,  ,  ,  ,  ,  );


--A1L42 is Mux~1905
A1L42 = A1L35 & (reg_sel[0] & (!D1_IR[4]) # !reg_sel[0] & D1_pc[4]);


--G2_q_output[4] is regfile:G_REGFILE|reg:Areg01|q_output[4]
G2_q_output[4] = DFFEAS(E1L14, !D1_state.s3, reset,  , H1L1,  ,  ,  ,  );


--G3_q_output[4] is regfile:G_REGFILE|reg:Areg02|q_output[4]
G3_q_output[4] = DFFEAS(E1L14, !D1_state.s3, reset,  , H1L2,  ,  ,  ,  );


--G1_q_output[4] is regfile:G_REGFILE|reg:Areg00|q_output[4]
G1_q_output[4] = DFFEAS(E1L14, !D1_state.s3, reset,  , G1L1,  ,  ,  ,  );


--A1L43 is Mux~1906
A1L43 = reg_sel[0] & (reg_sel[1]) # !reg_sel[0] & (reg_sel[1] & G3_q_output[4] # !reg_sel[1] & (G1_q_output[4]));


--G4_q_output[4] is regfile:G_REGFILE|reg:Areg03|q_output[4]
G4_q_output[4] = DFFEAS(E1L14, !D1_state.s3, reset,  , H1L3,  ,  ,  ,  );


--A1L44 is Mux~1907
A1L44 = reg_sel[0] & (A1L43 & (G4_q_output[4]) # !A1L43 & G2_q_output[4]) # !reg_sel[0] & (A1L43);


--A1L45 is Mux~1908
A1L45 = !A1L40 & (A1L42 # A1L39 & A1L44);


--D1_pc[5] is instru_fetch:G_INSTRU_FETCH|pc[5]
D1_pc[5] = DFFEAS(D1L65, !D1_state.s3, reset,  ,  ,  ,  ,  ,  );


--D1_IR[5] is instru_fetch:G_INSTRU_FETCH|IR[5]
D1_IR[5] = DFFEAS(D1L39, D1_state.s2, reset,  ,  ,  ,  ,  ,  );


--A1L46 is Mux~1909
A1L46 = A1L35 & (reg_sel[0] & (!D1_IR[5]) # !reg_sel[0] & D1_pc[5]);


--G3_q_output[5] is regfile:G_REGFILE|reg:Areg02|q_output[5]
G3_q_output[5] = DFFEAS(E1L15, !D1_state.s3, reset,  , H1L2,  ,  ,  ,  );


--G2_q_output[5] is regfile:G_REGFILE|reg:Areg01|q_output[5]
G2_q_output[5] = DFFEAS(E1L15, !D1_state.s3, reset,  , H1L1,  ,  ,  ,  );


--G1_q_output[5] is regfile:G_REGFILE|reg:Areg00|q_output[5]
G1_q_output[5] = DFFEAS(E1L15, !D1_state.s3, reset,  , G1L1,  ,  ,  ,  );


--A1L47 is Mux~1910
A1L47 = reg_sel[1] & (reg_sel[0]) # !reg_sel[1] & (reg_sel[0] & G2_q_output[5] # !reg_sel[0] & (G1_q_output[5]));


--G4_q_output[5] is regfile:G_REGFILE|reg:Areg03|q_output[5]
G4_q_output[5] = DFFEAS(E1L15, !D1_state.s3, reset,  , H1L3,  ,  ,  ,  );


--A1L48 is Mux~1911
A1L48 = reg_sel[1] & (A1L47 & (G4_q_output[5]) # !A1L47 & G3_q_output[5]) # !reg_sel[1] & (A1L47);


--A1L49 is Mux~1912
A1L49 = !A1L40 & (A1L46 # A1L39 & A1L48);


--D1_pc[6] is instru_fetch:G_INSTRU_FETCH|pc[6]
D1_pc[6] = DFFEAS(D1L67, !D1_state.s3, reset,  ,  ,  ,  ,  ,  );


--D1_IR[6] is instru_fetch:G_INSTRU_FETCH|IR[6]
D1_IR[6] = DFFEAS(D1L41, D1_state.s2, reset,  ,  ,  ,  ,  ,  );


--A1L50 is Mux~1913
A1L50 = A1L35 & (reg_sel[0] & (!D1_IR[6]) # !reg_sel[0] & D1_pc[6]);


--G2_q_output[6] is regfile:G_REGFILE|reg:Areg01|q_output[6]
G2_q_output[6] = DFFEAS(E1L16, !D1_state.s3, reset,  , H1L1,  ,  ,  ,  );


--G3_q_output[6] is regfile:G_REGFILE|reg:Areg02|q_output[6]
G3_q_output[6] = DFFEAS(E1L16, !D1_state.s3, reset,  , H1L2,  ,  ,  ,  );


--G1_q_output[6] is regfile:G_REGFILE|reg:Areg00|q_output[6]
G1_q_output[6] = DFFEAS(E1L16, !D1_state.s3, reset,  , G1L1,  ,  ,  ,  );


--A1L51 is Mux~1914
A1L51 = reg_sel[0] & (reg_sel[1]) # !reg_sel[0] & (reg_sel[1] & G3_q_output[6] # !reg_sel[1] & (G1_q_output[6]));


--G4_q_output[6] is regfile:G_REGFILE|reg:Areg03|q_output[6]
G4_q_output[6] = DFFEAS(E1L16, !D1_state.s3, reset,  , H1L3,  ,  ,  ,  );


--A1L52 is Mux~1915
A1L52 = reg_sel[0] & (A1L51 & (G4_q_output[6]) # !A1L51 & G2_q_output[6]) # !reg_sel[0] & (A1L51);


--A1L53 is Mux~1916
A1L53 = !A1L40 & (A1L50 # A1L39 & A1L52);


--D1_IR[7] is instru_fetch:G_INSTRU_FETCH|IR[7]
D1_IR[7] = DFFEAS(E1_data_read[7], D1_state.s2, reset,  ,  ,  ,  ,  ,  );


--D1_pc[7] is instru_fetch:G_INSTRU_FETCH|pc[7]
D1_pc[7] = DFFEAS(D1L69, !D1_state.s3, reset,  ,  ,  ,  ,  ,  );


--A1L54 is Mux~1917
A1L54 = A1L35 & (reg_sel[0] & D1_IR[7] # !reg_sel[0] & (D1_pc[7]));


--G3_q_output[7] is regfile:G_REGFILE|reg:Areg02|q_output[7]
G3_q_output[7] = DFFEAS(E1L17, !D1_state.s3, reset,  , H1L2,  ,  ,  ,  );


--G2_q_output[7] is regfile:G_REGFILE|reg:Areg01|q_output[7]
G2_q_output[7] = DFFEAS(E1L17, !D1_state.s3, reset,  , H1L1,  ,  ,  ,  );


--G1_q_output[7] is regfile:G_REGFILE|reg:Areg00|q_output[7]
G1_q_output[7] = DFFEAS(E1L17, !D1_state.s3, reset,  , G1L1,  ,  ,  ,  );


--A1L55 is Mux~1918
A1L55 = reg_sel[1] & (reg_sel[0]) # !reg_sel[1] & (reg_sel[0] & G2_q_output[7] # !reg_sel[0] & (G1_q_output[7]));


--G4_q_output[7] is regfile:G_REGFILE|reg:Areg03|q_output[7]
G4_q_output[7] = DFFEAS(E1L17, !D1_state.s3, reset,  , H1L3,  ,  ,  ,  );


--A1L56 is Mux~1919
A1L56 = reg_sel[1] & (A1L55 & (G4_q_output[7]) # !A1L55 & G3_q_output[7]) # !reg_sel[1] & (A1L55);


--A1L57 is Mux~1920
A1L57 = !A1L40 & (A1L54 # A1L39 & A1L56);


--F1_c_out is regfile:G_REGFILE|c_out
F1_c_out = DFFEAS(C1L35, !D1_state.s3, reset,  , B1L4,  ,  ,  ,  );


--F1_z_out is regfile:G_REGFILE|z_out
F1_z_out = DFFEAS(C1L74, !D1_state.s3, reset,  , B1L4,  ,  ,  ,  );


--C1L36 is exe_unit:G_EXE|c_z_j_flag~35
C1L36 = D1_IR[4] & D1_IR[7] & !D1_IR[5];


--E1L19 is memory_unit:G_MEMORY|rw~28
E1L19 = D1_state.s3 & reset & C1L36 & !D1_IR[6];


--E1L20 is memory_unit:G_MEMORY|rw~29
E1L20 = clk # !E1L19;


--D1L1 is instru_fetch:G_INSTRU_FETCH|add~229
D1L1 = D1_pc[0] $ VCC;

--D1L2 is instru_fetch:G_INSTRU_FETCH|add~230
D1L2 = CARRY(D1_pc[0]);


--C1L51 is exe_unit:G_EXE|Mem_Addr[7]~114
C1L51 = D1_state.s1 # D1_IR[4] & D1_IR[5] & D1_IR[7];


--J1L1 is regfile:G_REGFILE|mux_4_to_1:muxB|output[0]~112
J1L1 = D1_IR[0] & (D1_IR[1]) # !D1_IR[0] & (D1_IR[1] & G3_q_output[0] # !D1_IR[1] & (G1_q_output[0]));


--J1L2 is regfile:G_REGFILE|mux_4_to_1:muxB|output[0]~113
J1L2 = D1_IR[0] & (J1L1 & (G4_q_output[0]) # !J1L1 & G2_q_output[0]) # !D1_IR[0] & (J1L1);


--C1L52 is exe_unit:G_EXE|Mem_Addr[7]~115
C1L52 = D1_state.s1 # C1L36 & !D1_IR[6];


--J2L1 is regfile:G_REGFILE|mux_4_to_1:muxA|output[0]~112
J2L1 = D1_IR[2] & (D1_IR[3]) # !D1_IR[2] & (D1_IR[3] & G3_q_output[0] # !D1_IR[3] & (G1_q_output[0]));


--J2L2 is regfile:G_REGFILE|mux_4_to_1:muxA|output[0]~113
J2L2 = D1_IR[2] & (J2L1 & (G4_q_output[0]) # !J2L1 & G2_q_output[0]) # !D1_IR[2] & (J2L1);


--C1L37 is exe_unit:G_EXE|Mem_Addr[0]~116
C1L37 = C1L51 & (C1L52) # !C1L51 & (C1L52 & J1L2 # !C1L52 & (J2L2));


--C1L38 is exe_unit:G_EXE|Mem_Addr[0]~117
C1L38 = C1L51 & (C1L37 & (D1_pc[0]) # !C1L37 & D1L1) # !C1L51 & (C1L37);


--J1L3 is regfile:G_REGFILE|mux_4_to_1:muxB|output[1]~114
J1L3 = D1_IR[1] & (D1_IR[0]) # !D1_IR[1] & (D1_IR[0] & G2_q_output[1] # !D1_IR[0] & (G1_q_output[1]));


--J1L4 is regfile:G_REGFILE|mux_4_to_1:muxB|output[1]~115
J1L4 = D1_IR[1] & (J1L3 & (G4_q_output[1]) # !J1L3 & G3_q_output[1]) # !D1_IR[1] & (J1L3);


--D1L3 is instru_fetch:G_INSTRU_FETCH|add~231
D1L3 = D1_pc[1] & !D1L2 # !D1_pc[1] & (D1L2 # GND);

--D1L4 is instru_fetch:G_INSTRU_FETCH|add~232
D1L4 = CARRY(!D1L2 # !D1_pc[1]);


--J2L3 is regfile:G_REGFILE|mux_4_to_1:muxA|output[1]~114
J2L3 = D1_IR[2] & (D1_IR[3]) # !D1_IR[2] & (D1_IR[3] & G3_q_output[1] # !D1_IR[3] & (G1_q_output[1]));


--J2L4 is regfile:G_REGFILE|mux_4_to_1:muxA|output[1]~115
J2L4 = D1_IR[2] & (J2L3 & (G4_q_output[1]) # !J2L3 & G2_q_output[1]) # !D1_IR[2] & (J2L3);


--C1L39 is exe_unit:G_EXE|Mem_Addr[1]~118
C1L39 = C1L52 & (C1L51) # !C1L52 & (C1L51 & D1L3 # !C1L51 & (J2L4));


--C1L40 is exe_unit:G_EXE|Mem_Addr[1]~119
C1L40 = C1L52 & (C1L39 & (D1_pc[1]) # !C1L39 & J1L4) # !C1L52 & (C1L39);


--D1L5 is instru_fetch:G_INSTRU_FETCH|add~233
D1L5 = D1_pc[2] & (D1L4 $ GND) # !D1_pc[2] & !D1L4 & VCC;

--D1L6 is instru_fetch:G_INSTRU_FETCH|add~234
D1L6 = CARRY(D1_pc[2] & !D1L4);


--J1L5 is regfile:G_REGFILE|mux_4_to_1:muxB|output[2]~116
J1L5 = D1_IR[0] & (D1_IR[1]) # !D1_IR[0] & (D1_IR[1] & G3_q_output[2] # !D1_IR[1] & (G1_q_output[2]));


--J1L6 is regfile:G_REGFILE|mux_4_to_1:muxB|output[2]~117
J1L6 = D1_IR[0] & (J1L5 & (G4_q_output[2]) # !J1L5 & G2_q_output[2]) # !D1_IR[0] & (J1L5);


--J2L5 is regfile:G_REGFILE|mux_4_to_1:muxA|output[2]~116
J2L5 = D1_IR[2] & (D1_IR[3]) # !D1_IR[2] & (D1_IR[3] & G3_q_output[2] # !D1_IR[3] & (G1_q_output[2]));


--J2L6 is regfile:G_REGFILE|mux_4_to_1:muxA|output[2]~117
J2L6 = D1_IR[2] & (J2L5 & (G4_q_output[2]) # !J2L5 & G2_q_output[2]) # !D1_IR[2] & (J2L5);


--C1L41 is exe_unit:G_EXE|Mem_Addr[2]~120
C1L41 = C1L51 & (C1L52) # !C1L51 & (C1L52 & J1L6 # !C1L52 & (J2L6));


--C1L42 is exe_unit:G_EXE|Mem_Addr[2]~121
C1L42 = C1L51 & (C1L41 & (D1_pc[2]) # !C1L41 & D1L5) # !C1L51 & (C1L41);


--J1L7 is regfile:G_REGFILE|mux_4_to_1:muxB|output[3]~118
J1L7 = D1_IR[1] & (D1_IR[0]) # !D1_IR[1] & (D1_IR[0] & G2_q_output[3] # !D1_IR[0] & (G1_q_output[3]));


--J1L8 is regfile:G_REGFILE|mux_4_to_1:muxB|output[3]~119
J1L8 = D1_IR[1] & (J1L7 & (G4_q_output[3]) # !J1L7 & G3_q_output[3]) # !D1_IR[1] & (J1L7);


--D1L7 is instru_fetch:G_INSTRU_FETCH|add~235
D1L7 = D1_pc[3] & !D1L6 # !D1_pc[3] & (D1L6 # GND);

--D1L8 is instru_fetch:G_INSTRU_FETCH|add~236
D1L8 = CARRY(!D1L6 # !D1_pc[3]);


--J2L7 is regfile:G_REGFILE|mux_4_to_1:muxA|output[3]~118
J2L7 = D1_IR[2] & (D1_IR[3]) # !D1_IR[2] & (D1_IR[3] & G3_q_output[3] # !D1_IR[3] & (G1_q_output[3]));


--J2L8 is regfile:G_REGFILE|mux_4_to_1:muxA|output[3]~119
J2L8 = D1_IR[2] & (J2L7 & (G4_q_output[3]) # !J2L7 & G2_q_output[3]) # !D1_IR[2] & (J2L7);


--C1L43 is exe_unit:G_EXE|Mem_Addr[3]~122
C1L43 = C1L52 & (C1L51) # !C1L52 & (C1L51 & D1L7 # !C1L51 & (J2L8));


--C1L44 is exe_unit:G_EXE|Mem_Addr[3]~123
C1L44 = C1L52 & (C1L43 & (D1_pc[3]) # !C1L43 & J1L8) # !C1L52 & (C1L43);


--D1L9 is instru_fetch:G_INSTRU_FETCH|add~237
D1L9 = D1_pc[4] & (D1L8 $ GND) # !D1_pc[4] & !D1L8 & VCC;

--D1L10 is instru_fetch:G_INSTRU_FETCH|add~238
D1L10 = CARRY(D1_pc[4] & !D1L8);


--J1L9 is regfile:G_REGFILE|mux_4_to_1:muxB|output[4]~120
J1L9 = D1_IR[0] & (D1_IR[1]) # !D1_IR[0] & (D1_IR[1] & G3_q_output[4] # !D1_IR[1] & (G1_q_output[4]));


--J1L10 is regfile:G_REGFILE|mux_4_to_1:muxB|output[4]~121
J1L10 = D1_IR[0] & (J1L9 & (G4_q_output[4]) # !J1L9 & G2_q_output[4]) # !D1_IR[0] & (J1L9);


--J2L9 is regfile:G_REGFILE|mux_4_to_1:muxA|output[4]~120
J2L9 = D1_IR[2] & (D1_IR[3]) # !D1_IR[2] & (D1_IR[3] & G3_q_output[4] # !D1_IR[3] & (G1_q_output[4]));


--J2L10 is regfile:G_REGFILE|mux_4_to_1:muxA|output[4]~121
J2L10 = D1_IR[2] & (J2L9 & (G4_q_output[4]) # !J2L9 & G2_q_output[4]) # !D1_IR[2] & (J2L9);


--C1L45 is exe_unit:G_EXE|Mem_Addr[4]~124
C1L45 = C1L51 & (C1L52) # !C1L51 & (C1L52 & J1L10 # !C1L52 & (J2L10));


--C1L46 is exe_unit:G_EXE|Mem_Addr[4]~125
C1L46 = C1L51 & (C1L45 & (D1_pc[4]) # !C1L45 & D1L9) # !C1L51 & (C1L45);


--J1L11 is regfile:G_REGFILE|mux_4_to_1:muxB|output[5]~122
J1L11 = D1_IR[1] & (D1_IR[0]) # !D1_IR[1] & (D1_IR[0] & G2_q_output[5] # !D1_IR[0] & (G1_q_output[5]));


--J1L12 is regfile:G_REGFILE|mux_4_to_1:muxB|output[5]~123
J1L12 = D1_IR[1] & (J1L11 & (G4_q_output[5]) # !J1L11 & G3_q_output[5]) # !D1_IR[1] & (J1L11);


--D1L11 is instru_fetch:G_INSTRU_FETCH|add~239
D1L11 = D1_pc[5] & !D1L10 # !D1_pc[5] & (D1L10 # GND);

--D1L12 is instru_fetch:G_INSTRU_FETCH|add~240
D1L12 = CARRY(!D1L10 # !D1_pc[5]);


--J2L11 is regfile:G_REGFILE|mux_4_to_1:muxA|output[5]~122
J2L11 = D1_IR[3] & (D1_IR[2]) # !D1_IR[3] & (D1_IR[2] & G2_q_output[5] # !D1_IR[2] & (G1_q_output[5]));


--J2L12 is regfile:G_REGFILE|mux_4_to_1:muxA|output[5]~123
J2L12 = D1_IR[3] & (J2L11 & (G4_q_output[5]) # !J2L11 & G3_q_output[5]) # !D1_IR[3] & (J2L11);


--C1L47 is exe_unit:G_EXE|Mem_Addr[5]~126
C1L47 = C1L52 & (C1L51) # !C1L52 & (C1L51 & D1L11 # !C1L51 & (J2L12));


--C1L48 is exe_unit:G_EXE|Mem_Addr[5]~127
C1L48 = C1L52 & (C1L47 & (D1_pc[5]) # !C1L47 & J1L12) # !C1L52 & (C1L47);


--D1L13 is instru_fetch:G_INSTRU_FETCH|add~241
D1L13 = D1_pc[6] & (D1L12 $ GND) # !D1_pc[6] & !D1L12 & VCC;

--D1L14 is instru_fetch:G_INSTRU_FETCH|add~242
D1L14 = CARRY(D1_pc[6] & !D1L12);


--J1L13 is regfile:G_REGFILE|mux_4_to_1:muxB|output[6]~124
J1L13 = D1_IR[0] & (D1_IR[1]) # !D1_IR[0] & (D1_IR[1] & G3_q_output[6] # !D1_IR[1] & (G1_q_output[6]));


--J1L14 is regfile:G_REGFILE|mux_4_to_1:muxB|output[6]~125
J1L14 = D1_IR[0] & (J1L13 & (G4_q_output[6]) # !J1L13 & G2_q_output[6]) # !D1_IR[0] & (J1L13);


--J2L13 is regfile:G_REGFILE|mux_4_to_1:muxA|output[6]~124
J2L13 = D1_IR[2] & (D1_IR[3]) # !D1_IR[2] & (D1_IR[3] & G3_q_output[6] # !D1_IR[3] & (G1_q_output[6]));


--J2L14 is regfile:G_REGFILE|mux_4_to_1:muxA|output[6]~125
J2L14 = D1_IR[2] & (J2L13 & (G4_q_output[6]) # !J2L13 & G2_q_output[6]) # !D1_IR[2] & (J2L13);


--C1L49 is exe_unit:G_EXE|Mem_Addr[6]~128
C1L49 = C1L51 & (C1L52) # !C1L51 & (C1L52 & J1L14 # !C1L52 & (J2L14));


--C1L50 is exe_unit:G_EXE|Mem_Addr[6]~129
C1L50 = C1L51 & (C1L49 & (D1_pc[6]) # !C1L49 & D1L13) # !C1L51 & (C1L49);


--J1L15 is regfile:G_REGFILE|mux_4_to_1:muxB|output[7]~126
J1L15 = D1_IR[1] & (D1_IR[0]) # !D1_IR[1] & (D1_IR[0] & G2_q_output[7] # !D1_IR[0] & (G1_q_output[7]));


--J1L16 is regfile:G_REGFILE|mux_4_to_1:muxB|output[7]~127
J1L16 = D1_IR[1] & (J1L15 & (G4_q_output[7]) # !J1L15 & G3_q_output[7]) # !D1_IR[1] & (J1L15);


--D1L15 is instru_fetch:G_INSTRU_FETCH|add~243
D1L15 = D1_pc[7] $ D1L14;


--J2L15 is regfile:G_REGFILE|mux_4_to_1:muxA|output[7]~126
J2L15 = D1_IR[3] & (D1_IR[2]) # !D1_IR[3] & (D1_IR[2] & G2_q_output[7] # !D1_IR[2] & (G1_q_output[7]));


--J2L16 is regfile:G_REGFILE|mux_4_to_1:muxA|output[7]~127
J2L16 = D1_IR[3] & (J2L15 & (G4_q_output[7]) # !J2L15 & G3_q_output[7]) # !D1_IR[3] & (J2L15);


--C1L53 is exe_unit:G_EXE|Mem_Addr[7]~130
C1L53 = C1L52 & (C1L51) # !C1L52 & (C1L51 & D1L15 # !C1L51 & (J2L16));


--C1L54 is exe_unit:G_EXE|Mem_Addr[7]~131
C1L54 = C1L52 & (C1L53 & (D1_pc[7]) # !C1L53 & J1L16) # !C1L52 & (C1L53);


--C1L1 is exe_unit:G_EXE|add~259
C1L1 = D1L1 & (D1_IR[0] $ VCC) # !D1L1 & D1_IR[0] & VCC;

--C1L2 is exe_unit:G_EXE|add~260
C1L2 = CARRY(D1L1 & D1_IR[0]);


--B1L2 is decoder_unit:G_DECODER|dw_instruct~19
B1L2 = D1_IR[4] & D1_IR[5] & D1_IR[7];


--D1L53 is instru_fetch:G_INSTRU_FETCH|pc~564
D1L53 = D1_IR[6] & (C1L36 & !F1_z_out) # !D1_IR[6] & D1_pc[0];


--D1L54 is instru_fetch:G_INSTRU_FETCH|pc~565
D1L54 = B1L2 & (D1_IR[6] & E1_data_read[0] # !D1_IR[6] & (D1L53)) # !B1L2 & (D1_IR[6] & D1L53);


--D1L55 is instru_fetch:G_INSTRU_FETCH|pc~566
D1L55 = B1L2 & (D1L54) # !B1L2 & (D1L54 & (C1L1) # !D1L54 & D1L1);


--D1_state.s0 is instru_fetch:G_INSTRU_FETCH|state.s0
D1_state.s0 = DFFEAS(VCC, clk, reset,  ,  ,  ,  ,  ,  );


--D1L74 is instru_fetch:G_INSTRU_FETCH|state~0
D1L74 = D1_state.s3 # !D1_state.s0;


--C1L69 is exe_unit:G_EXE|result[7]~1570
C1L69 = !D1_IR[7] & (D1_IR[4] & (!D1_IR[6] # !D1_IR[5]) # !D1_IR[4] & (D1_IR[5] # D1_IR[6]));


--C1L3 is exe_unit:G_EXE|add~261
C1L3 = J1L2 & (J2L2 $ VCC) # !J1L2 & J2L2 & VCC;

--C1L4 is exe_unit:G_EXE|add~262
C1L4 = CARRY(J1L2 & J2L2);


--B1L3 is decoder_unit:G_DECODER|op_code[0]~38
B1L3 = D1_IR[7] # !D1_IR[4];


--C1L55 is exe_unit:G_EXE|result[0]~1571
C1L55 = C1L69 & J1L2 # !C1L69 & (C1L3 & !B1L3);


--C1L56 is exe_unit:G_EXE|result[0]~1572
C1L56 = C1L55 # J2L2 & B1L3 & !C1L69;


--B1L1 is decoder_unit:G_DECODER|DRWr_proc~2
B1L1 = D1_IR[5] & !D1_IR[6];


--E1L10 is memory_unit:G_MEMORY|DR_data_out[0]~880
E1L10 = D1_IR[7] & (B1L1 & E1_data_read[0] # !B1L1 & (C1L56)) # !D1_IR[7] & (C1L56);


--H1L1 is regfile:G_REGFILE|decoder_2_to_4:des_decoder|sel02~86
H1L1 = D1_IR[0] & !D1_IR[1] & (B1L1 # !D1_IR[7]);


--H1L2 is regfile:G_REGFILE|decoder_2_to_4:des_decoder|sel02~87
H1L2 = D1_IR[1] & !D1_IR[0] & (B1L1 # !D1_IR[7]);


--G1L1 is regfile:G_REGFILE|reg:Areg00|process0~0
G1L1 = !D1_IR[0] & !D1_IR[1] & (B1L1 # !D1_IR[7]);


--H1L3 is regfile:G_REGFILE|decoder_2_to_4:des_decoder|sel02~88
H1L3 = D1_IR[0] & D1_IR[1] & (B1L1 # !D1_IR[7]);


--D1L17 is instru_fetch:G_INSTRU_FETCH|add~245
D1L17 = D1_pc[1] $ VCC;

--D1L18 is instru_fetch:G_INSTRU_FETCH|add~246
D1L18 = CARRY(D1_pc[1]);


--C1L5 is exe_unit:G_EXE|add~263
C1L5 = D1L3 & (D1_IR[1] & C1L2 & VCC # !D1_IR[1] & !C1L2) # !D1L3 & (D1_IR[1] & !C1L2 # !D1_IR[1] & (C1L2 # GND));

--C1L6 is exe_unit:G_EXE|add~264
C1L6 = CARRY(D1L3 & !D1_IR[1] & !C1L2 # !D1L3 & (!C1L2 # !D1_IR[1]));


--D1L46 is instru_fetch:G_INSTRU_FETCH|pc[1]~567
D1L46 = D1_IR[6] & (B1L2 $ (!F1_z_out & C1L36));


--D1L56 is instru_fetch:G_INSTRU_FETCH|pc~568
D1L56 = B1L2 & (D1L46) # !B1L2 & (D1L46 & C1L5 # !D1L46 & (D1L3));


--D1L57 is instru_fetch:G_INSTRU_FETCH|pc~569
D1L57 = B1L2 & (D1L56 & (E1_data_read[1]) # !D1L56 & D1L17) # !B1L2 & (D1L56);


--C1L7 is exe_unit:G_EXE|add~265
C1L7 = J1L4 & (J2L4 & C1L4 & VCC # !J2L4 & !C1L4) # !J1L4 & (J2L4 & !C1L4 # !J2L4 & (C1L4 # GND));

--C1L8 is exe_unit:G_EXE|add~266
C1L8 = CARRY(J1L4 & !J2L4 & !C1L4 # !J1L4 & (!C1L4 # !J2L4));


--C1L57 is exe_unit:G_EXE|result[1]~1573
C1L57 = C1L69 & J1L4 # !C1L69 & (C1L7 & !B1L3);


--C1L58 is exe_unit:G_EXE|result[1]~1574
C1L58 = C1L57 # J2L4 & B1L3 & !C1L69;


--E1L11 is memory_unit:G_MEMORY|DR_data_out[1]~881
E1L11 = D1_IR[7] & (B1L1 & E1_data_read[1] # !B1L1 & (C1L58)) # !D1_IR[7] & (C1L58);


--C1L9 is exe_unit:G_EXE|add~267
C1L9 = (D1L5 $ D1_IR[2] $ !C1L6) # GND;

--C1L10 is exe_unit:G_EXE|add~268
C1L10 = CARRY(D1L5 & (D1_IR[2] # !C1L6) # !D1L5 & D1_IR[2] & !C1L6);


--D1L19 is instru_fetch:G_INSTRU_FETCH|add~247
D1L19 = D1_pc[2] & !D1L18 # !D1_pc[2] & (D1L18 # GND);

--D1L20 is instru_fetch:G_INSTRU_FETCH|add~248
D1L20 = CARRY(!D1L18 # !D1_pc[2]);


--D1L58 is instru_fetch:G_INSTRU_FETCH|pc~570
D1L58 = D1L46 & (B1L2) # !D1L46 & (B1L2 & D1L19 # !B1L2 & (D1L5));


--D1L59 is instru_fetch:G_INSTRU_FETCH|pc~571
D1L59 = D1L46 & (D1L58 & (E1_data_read[2]) # !D1L58 & C1L9) # !D1L46 & (D1L58);


--C1L11 is exe_unit:G_EXE|add~269
C1L11 = (J1L6 $ J2L6 $ !C1L8) # GND;

--C1L12 is exe_unit:G_EXE|add~270
C1L12 = CARRY(J1L6 & (J2L6 # !C1L8) # !J1L6 & J2L6 & !C1L8);


--C1L59 is exe_unit:G_EXE|result[2]~1575
C1L59 = C1L69 & J1L6 # !C1L69 & (C1L11 & !B1L3);


--C1L60 is exe_unit:G_EXE|result[2]~1576
C1L60 = C1L59 # J2L6 & B1L3 & !C1L69;


--E1L12 is memory_unit:G_MEMORY|DR_data_out[2]~882
E1L12 = D1_IR[7] & (B1L1 & E1_data_read[2] # !B1L1 & (C1L60)) # !D1_IR[7] & (C1L60);


--D1L21 is instru_fetch:G_INSTRU_FETCH|add~249
D1L21 = D1_pc[3] & (D1L20 $ GND) # !D1_pc[3] & !D1L20 & VCC;

--D1L22 is instru_fetch:G_INSTRU_FETCH|add~250
D1L22 = CARRY(D1_pc[3] & !D1L20);


--C1L13 is exe_unit:G_EXE|add~271
C1L13 = D1L7 & (D1_IR[3] & C1L10 & VCC # !D1_IR[3] & !C1L10) # !D1L7 & (D1_IR[3] & !C1L10 # !D1_IR[3] & (C1L10 # GND));

--C1L14 is exe_unit:G_EXE|add~272
C1L14 = CARRY(D1L7 & !D1_IR[3] & !C1L10 # !D1L7 & (!C1L10 # !D1_IR[3]));


--D1L60 is instru_fetch:G_INSTRU_FETCH|pc~572
D1L60 = B1L2 & (D1L46) # !B1L2 & (D1L46 & C1L13 # !D1L46 & (D1L7));


--D1L61 is instru_fetch:G_INSTRU_FETCH|pc~573
D1L61 = B1L2 & (D1L60 & (E1_data_read[3]) # !D1L60 & D1L21) # !B1L2 & (D1L60);


--C1L15 is exe_unit:G_EXE|add~273
C1L15 = J1L8 & (J2L8 & C1L12 & VCC # !J2L8 & !C1L12) # !J1L8 & (J2L8 & !C1L12 # !J2L8 & (C1L12 # GND));

--C1L16 is exe_unit:G_EXE|add~274
C1L16 = CARRY(J1L8 & !J2L8 & !C1L12 # !J1L8 & (!C1L12 # !J2L8));


--C1L61 is exe_unit:G_EXE|result[3]~1577
C1L61 = C1L69 & J1L8 # !C1L69 & (C1L15 & !B1L3);


--C1L62 is exe_unit:G_EXE|result[3]~1578
C1L62 = C1L61 # J2L8 & B1L3 & !C1L69;


--E1L13 is memory_unit:G_MEMORY|DR_data_out[3]~883
E1L13 = D1_IR[7] & (B1L1 & E1_data_read[3] # !B1L1 & (C1L62)) # !D1_IR[7] & (C1L62);


--C1L17 is exe_unit:G_EXE|add~275
C1L17 = (D1L9 $ D1_IR[3] $ !C1L14) # GND;

--C1L18 is exe_unit:G_EXE|add~276
C1L18 = CARRY(D1L9 & (D1_IR[3] # !C1L14) # !D1L9 & D1_IR[3] & !C1L14);


--D1L23 is instru_fetch:G_INSTRU_FETCH|add~251
D1L23 = D1_pc[4] & !D1L22 # !D1_pc[4] & (D1L22 # GND);

--D1L24 is instru_fetch:G_INSTRU_FETCH|add~252
D1L24 = CARRY(!D1L22 # !D1_pc[4]);


--D1L62 is instru_fetch:G_INSTRU_FETCH|pc~574
D1L62 = D1L46 & (B1L2) # !D1L46 & (B1L2 & D1L23 # !B1L2 & (D1L9));


--D1L63 is instru_fetch:G_INSTRU_FETCH|pc~575
D1L63 = D1L46 & (D1L62 & (E1_data_read[4]) # !D1L62 & C1L17) # !D1L46 & (D1L62);


--C1L19 is exe_unit:G_EXE|add~277
C1L19 = (J1L10 $ J2L10 $ !C1L16) # GND;

--C1L20 is exe_unit:G_EXE|add~278
C1L20 = CARRY(J1L10 & (J2L10 # !C1L16) # !J1L10 & J2L10 & !C1L16);


--C1L63 is exe_unit:G_EXE|result[4]~1579
C1L63 = C1L69 & J1L10 # !C1L69 & (C1L19 & !B1L3);


--C1L64 is exe_unit:G_EXE|result[4]~1580
C1L64 = C1L63 # J2L10 & B1L3 & !C1L69;


--E1L14 is memory_unit:G_MEMORY|DR_data_out[4]~884
E1L14 = D1_IR[7] & (B1L1 & E1_data_read[4] # !B1L1 & (C1L64)) # !D1_IR[7] & (C1L64);


--D1L25 is instru_fetch:G_INSTRU_FETCH|add~253
D1L25 = D1_pc[5] & (D1L24 $ GND) # !D1_pc[5] & !D1L24 & VCC;

--D1L26 is instru_fetch:G_INSTRU_FETCH|add~254
D1L26 = CARRY(D1_pc[5] & !D1L24);


--C1L21 is exe_unit:G_EXE|add~279
C1L21 = D1L11 & (D1_IR[3] & C1L18 & VCC # !D1_IR[3] & !C1L18) # !D1L11 & (D1_IR[3] & !C1L18 # !D1_IR[3] & (C1L18 # GND));

--C1L22 is exe_unit:G_EXE|add~280
C1L22 = CARRY(D1L11 & !D1_IR[3] & !C1L18 # !D1L11 & (!C1L18 # !D1_IR[3]));


--D1L64 is instru_fetch:G_INSTRU_FETCH|pc~576
D1L64 = B1L2 & (D1L46) # !B1L2 & (D1L46 & C1L21 # !D1L46 & (D1L11));


--D1L65 is instru_fetch:G_INSTRU_FETCH|pc~577
D1L65 = B1L2 & (D1L64 & (E1_data_read[5]) # !D1L64 & D1L25) # !B1L2 & (D1L64);


--C1L23 is exe_unit:G_EXE|add~281
C1L23 = J1L12 & (J2L12 & C1L20 & VCC # !J2L12 & !C1L20) # !J1L12 & (J2L12 & !C1L20 # !J2L12 & (C1L20 # GND));

--C1L24 is exe_unit:G_EXE|add~282
C1L24 = CARRY(J1L12 & !J2L12 & !C1L20 # !J1L12 & (!C1L20 # !J2L12));


--C1L65 is exe_unit:G_EXE|result[5]~1581
C1L65 = C1L69 & J1L12 # !C1L69 & (C1L23 & !B1L3);


--C1L66 is exe_unit:G_EXE|result[5]~1582
C1L66 = C1L65 # J2L12 & B1L3 & !C1L69;


--E1L15 is memory_unit:G_MEMORY|DR_data_out[5]~885
E1L15 = D1_IR[7] & (B1L1 & E1_data_read[5] # !B1L1 & (C1L66)) # !D1_IR[7] & (C1L66);


--C1L25 is exe_unit:G_EXE|add~283
C1L25 = (D1L13 $ D1_IR[3] $ !C1L22) # GND;

--C1L26 is exe_unit:G_EXE|add~284
C1L26 = CARRY(D1L13 & (D1_IR[3] # !C1L22) # !D1L13 & D1_IR[3] & !C1L22);


--D1L27 is instru_fetch:G_INSTRU_FETCH|add~255
D1L27 = D1_pc[6] & !D1L26 # !D1_pc[6] & (D1L26 # GND);

--D1L28 is instru_fetch:G_INSTRU_FETCH|add~256
D1L28 = CARRY(!D1L26 # !D1_pc[6]);


--D1L66 is instru_fetch:G_INSTRU_FETCH|pc~578
D1L66 = D1L46 & (B1L2) # !D1L46 & (B1L2 & D1L27 # !B1L2 & (D1L13));


--D1L67 is instru_fetch:G_INSTRU_FETCH|pc~579
D1L67 = D1L46 & (D1L66 & (E1_data_read[6]) # !D1L66 & C1L25) # !D1L46 & (D1L66);


--C1L27 is exe_unit:G_EXE|add~285
C1L27 = (J1L14 $ J2L14 $ !C1L24) # GND;

--C1L28 is exe_unit:G_EXE|add~286
C1L28 = CARRY(J1L14 & (J2L14 # !C1L24) # !J1L14 & J2L14 & !C1L24);


--C1L67 is exe_unit:G_EXE|result[6]~1583
C1L67 = C1L69 & J1L14 # !C1L69 & (C1L27 & !B1L3);


--C1L68 is exe_unit:G_EXE|result[6]~1584
C1L68 = C1L67 # J2L14 & B1L3 & !C1L69;


--E1L16 is memory_unit:G_MEMORY|DR_data_out[6]~886
E1L16 = D1_IR[7] & (B1L1 & E1_data_read[6] # !B1L1 & (C1L68)) # !D1_IR[7] & (C1L68);


--D1L29 is instru_fetch:G_INSTRU_FETCH|add~257
D1L29 = D1_pc[7] $ !D1L28;


--C1L29 is exe_unit:G_EXE|add~287
C1L29 = D1L15 $ D1_IR[3] $ C1L26;


--D1L68 is instru_fetch:G_INSTRU_FETCH|pc~580
D1L68 = B1L2 & (D1L46) # !B1L2 & (D1L46 & C1L29 # !D1L46 & (D1L15));


--D1L69 is instru_fetch:G_INSTRU_FETCH|pc~581
D1L69 = B1L2 & (D1L68 & (E1_data_read[7]) # !D1L68 & D1L29) # !B1L2 & (D1L68);


--C1L31 is exe_unit:G_EXE|add~289
C1L31 = J1L16 & (J2L16 & C1L28 & VCC # !J2L16 & !C1L28) # !J1L16 & (J2L16 & !C1L28 # !J2L16 & (C1L28 # GND));

--C1L32 is exe_unit:G_EXE|add~290
C1L32 = CARRY(J1L16 & !J2L16 & !C1L28 # !J1L16 & (!C1L28 # !J2L16));


--C1L70 is exe_unit:G_EXE|result[7]~1585
C1L70 = C1L69 & J1L16 # !C1L69 & (C1L31 & !B1L3);


--C1L71 is exe_unit:G_EXE|result[7]~1586
C1L71 = C1L70 # J2L16 & B1L3 & !C1L69;


--E1L17 is memory_unit:G_MEMORY|DR_data_out[7]~887
E1L17 = D1_IR[7] & (B1L1 & E1_data_read[7] # !B1L1 & (C1L71)) # !D1_IR[7] & (C1L71);


--C1L33 is exe_unit:G_EXE|add~291
C1L33 = !C1L32;


--C1L35 is exe_unit:G_EXE|c_tmp~24
C1L35 = C1L33 & D1_IR[4] & D1_IR[5] & !D1_IR[7];


--B1L4 is decoder_unit:G_DECODER|op_code[2]~39
B1L4 = !D1_IR[7] & D1_IR[6];


--C1L72 is exe_unit:G_EXE|z_tmp~44
C1L72 = C1L56 # C1L58;


--C1L73 is exe_unit:G_EXE|z_tmp~45
C1L73 = C1L64 # C1L66 # C1L68 # C1L71;


--C1L74 is exe_unit:G_EXE|z_tmp~46
C1L74 = !C1L60 & !C1L62 & !C1L72 & !C1L73;


--E1L18 is memory_unit:G_MEMORY|R_W_Memory_proc~10
E1L18 = reset & (D1_IR[6] # !C1L36 # !D1_state.s3);


--D1L37 is instru_fetch:G_INSTRU_FETCH|IR[4]~65
D1L37 = !E1_data_read[4];


--D1L39 is instru_fetch:G_INSTRU_FETCH|IR[5]~66
D1L39 = !E1_data_read[5];


--D1L41 is instru_fetch:G_INSTRU_FETCH|IR[6]~67
D1L41 = !E1_data_read[6];


--E1_data_read[0] is memory_unit:G_MEMORY|data_read[0]
E1_data_read[0] = E1L18 & A1L60 # !E1L18 & (E1_data_read[0]);


--E1_data_read[1] is memory_unit:G_MEMORY|data_read[1]
E1_data_read[1] = E1L18 & A1L62 # !E1L18 & (E1_data_read[1]);


--E1_data_read[2] is memory_unit:G_MEMORY|data_read[2]
E1_data_read[2] = E1L18 & A1L64 # !E1L18 & (E1_data_read[2]);


--E1_data_read[3] is memory_unit:G_MEMORY|data_read[3]
E1_data_read[3] = E1L18 & A1L66 # !E1L18 & (E1_data_read[3]);


--E1_data_read[4] is memory_unit:G_MEMORY|data_read[4]
E1_data_read[4] = E1L18 & A1L68 # !E1L18 & (E1_data_read[4]);


--E1_data_read[5] is memory_unit:G_MEMORY|data_read[5]
E1_data_read[5] = E1L18 & A1L70 # !E1L18 & (E1_data_read[5]);


--E1_data_read[6] is memory_unit:G_MEMORY|data_read[6]
E1_data_read[6] = E1L18 & A1L72 # !E1L18 & (E1_data_read[6]);


--E1_data_read[7] is memory_unit:G_MEMORY|data_read[7]
E1_data_read[7] = E1L18 & A1L74 # !E1L18 & (E1_data_read[7]);


--reg_sel[2] is reg_sel[2]
--operation mode is input

reg_sel[2] = INPUT();


--reg_sel[1] is reg_sel[1]
--operation mode is input

reg_sel[1] = INPUT();


--reg_sel[3] is reg_sel[3]
--operation mode is input

reg_sel[3] = INPUT();


--reg_sel[0] is reg_sel[0]
--operation mode is input

reg_sel[0] = INPUT();


--reg_sel[4] is reg_sel[4]
--operation mode is input

reg_sel[4] = INPUT();


--reg_sel[5] is reg_sel[5]
--operation mode is input

reg_sel[5] = INPUT();


--clk is clk
--operation mode is input

clk = INPUT();


--reset is reset
--operation mode is input

reset = INPUT();


--reg_content[0] is reg_content[0]
--operation mode is output

reg_content[0] = OUTPUT(A1L20);


--reg_content[1] is reg_content[1]
--operation mode is output

reg_content[1] = OUTPUT(A1L27);


--reg_content[2] is reg_content[2]
--operation mode is output

reg_content[2] = OUTPUT(A1L34);


--reg_content[3] is reg_content[3]
--operation mode is output

reg_content[3] = OUTPUT(A1L41);


--reg_content[4] is reg_content[4]
--operation mode is output

reg_content[4] = OUTPUT(A1L45);


--reg_content[5] is reg_content[5]
--operation mode is output

reg_content[5] = OUTPUT(A1L49);


--reg_content[6] is reg_content[6]
--operation mode is output

reg_content[6] = OUTPUT(A1L53);


--reg_content[7] is reg_content[7]
--operation mode is output

reg_content[7] = OUTPUT(A1L57);


--c_flag is c_flag
--operation mode is output

c_flag = OUTPUT(F1_c_out);


--z_flag is z_flag
--operation mode is output

z_flag = OUTPUT(F1_z_out);


--WE is WE
--operation mode is output

WE = OUTPUT(E1L20);


--AR[0] is AR[0]
--operation mode is output

AR[0] = OUTPUT(C1L38);


--AR[1] is AR[1]
--operation mode is output

AR[1] = OUTPUT(C1L40);


--AR[2] is AR[2]
--operation mode is output

AR[2] = OUTPUT(C1L42);


--AR[3] is AR[3]
--operation mode is output

AR[3] = OUTPUT(C1L44);


--AR[4] is AR[4]
--operation mode is output

AR[4] = OUTPUT(C1L46);


--AR[5] is AR[5]
--operation mode is output

AR[5] = OUTPUT(C1L48);


--AR[6] is AR[6]
--operation mode is output

AR[6] = OUTPUT(C1L50);


--AR[7] is AR[7]
--operation mode is output

AR[7] = OUTPUT(C1L54);


--A1L60 is OB[0]~7
--operation mode is bidir

A1L60 = OB[0];

--OB[0] is OB[0]
--operation mode is bidir

OB[0]_tri_out = TRI(J2L2, E1L19);
OB[0] = BIDIR(OB[0]_tri_out);


--A1L62 is OB[1]~6
--operation mode is bidir

A1L62 = OB[1];

--OB[1] is OB[1]
--operation mode is bidir

OB[1]_tri_out = TRI(J2L4, E1L19);
OB[1] = BIDIR(OB[1]_tri_out);


--A1L64 is OB[2]~5
--operation mode is bidir

A1L64 = OB[2];

--OB[2] is OB[2]
--operation mode is bidir

OB[2]_tri_out = TRI(J2L6, E1L19);
OB[2] = BIDIR(OB[2]_tri_out);


--A1L66 is OB[3]~4
--operation mode is bidir

A1L66 = OB[3];

--OB[3] is OB[3]
--operation mode is bidir

OB[3]_tri_out = TRI(J2L8, E1L19);
OB[3] = BIDIR(OB[3]_tri_out);


--A1L68 is OB[4]~3
--operation mode is bidir

A1L68 = OB[4];

--OB[4] is OB[4]
--operation mode is bidir

OB[4]_tri_out = TRI(J2L10, E1L19);
OB[4] = BIDIR(OB[4]_tri_out);


--A1L70 is OB[5]~2
--operation mode is bidir

A1L70 = OB[5];

--OB[5] is OB[5]
--operation mode is bidir

OB[5]_tri_out = TRI(J2L12, E1L19);
OB[5] = BIDIR(OB[5]_tri_out);


--A1L72 is OB[6]~1
--operation mode is bidir

A1L72 = OB[6];

--OB[6] is OB[6]
--operation mode is bidir

OB[6]_tri_out = TRI(J2L14, E1L19);
OB[6] = BIDIR(OB[6]_tri_out);


--A1L74 is OB[7]~0
--operation mode is bidir

A1L74 = OB[7];

--OB[7] is OB[7]
--operation mode is bidir

OB[7]_tri_out = TRI(J2L16, E1L19);
OB[7] = BIDIR(OB[7]_tri_out);


